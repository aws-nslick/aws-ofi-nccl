name: Package Generation
on: [push, pull_request]
jobs:
  srpm:
    name: "Generate SRPM"
    runs-on: ubuntu-latest
    container:
      image: fedora:rawhide
      options: --privileged
    steps:
      - run: dnf install -y packit git nodejs
      - uses: actions/checkout@v4
      - run: git config --global --add safe.directory /__w/aws-ofi-nccl/aws-ofi-nccl
      - run: packit srpm
      - uses: actions/upload-artifact@v4
        with:
          name: "libnccl-net-ofi.src.rpm"
          path: "*.src.rpm"
          if-no-files-found: 'error'
          compression-level: '0'

  mock-rpm:
    runs-on: ubuntu-latest
    container:
      image: fedora:39
      options: --privileged --cap-add SYS_ADMIN
    needs: srpm
    strategy:
      matrix:
        include:
          - name: al2023-x86-cuda-aws
            args: "--define 'with_cuda 1' --define 'with_platform_aws 1'"
            accel_repo: --addrepo "https://developer.download.nvidia.com/compute/cuda/repos/amzn2023/x86_64/"
            efa_repo: "./aws-efa-installer/RPMS/ALINUX2023/x86_64/"
            mock: "/etc/mock/amazonlinux-2023-x86_64.cfg"
          - name: al2023-x86-neuron-aws
            args: "--define 'with_neuron 1' --define 'with_platform_aws 1'"
            accel_repo: ""
            efa_repo: "./aws-efa-installer/RPMS/ALINUX2023/x86_64/"
            mock: "/etc/mock/amazonlinux-2023-x86_64.cfg"
          - name: rocky9-x86-neuron-aws
            args: "--define 'with_neuron 1' --define 'with_platform_aws 1'"
            accel_repo: ""
            efa_repo: "./aws-efa-installer/RPMS/ROCKYLINUX9/x86_64/"
            mock: "/etc/mock/rocky+epel-9-x86_64.cfg"
          - name: rocky9-x86-cuda-aws
            args: "--define 'with_neuron 1' --define 'with_platform_aws 1'"
            accel_repo: --addrepo "https://developer.download.nvidia.com/compute/cuda/repos/rhel8/x86_64/"
            efa_repo: "./aws-efa-installer/RPMS/ROCKYLINUX8/x86_64/"
            mock: "/etc/mock/rocky+epel-9-x86_64.cfg"
          - name: rocky8-x86-neuron-aws
            args: "--define 'with_neuron 1' --define 'with_platform_aws 1'"
            accel_repo: ""
            efa_repo: "./aws-efa-installer/RPMS/ROCKYLINUX8/x86_64/"
            mock: "/etc/mock/rocky-8-x86_64.cfg"
          - name: rocky8-x86-cuda-aws
            args: "--define 'with_neuron 1' --define 'with_platform_aws 1'"
            accel_repo: --addrepo "https://developer.download.nvidia.com/compute/cuda/repos/rhel8/x86_64/"
            efa_repo: "./aws-efa-installer/RPMS/ROCKYLINUX8/x86_64/"
            mock: "/etc/mock/rocky-8-x86_64.cfg"
          - name: leap155-x86-neuron-aws
            args: "--define 'with_neuron 1' --define 'with_platform_aws 1'"
            accel_repo: ""
            efa_repo: "./aws-efa-installer/RPMS/SUSE/x86_64/"
            mock: "/etc/mock/opensuse-leap-15.5-x86_64.cfg"
          - name: leap155-x86-cuda-aws
            args: "--define 'with_neuron 1' --define 'with_platform_aws 1'"
            accel_repo: --addrepo "https://developer.download.nvidia.com/compute/cuda/repos/opensuse15/x86_64/"
            efa_repo: "./aws-efa-installer/RPMS/SUSE/x86_64/"
            mock: "/etc/mock/opensuse-leap-15.5-x86_64.cfg"
          ## need to figure out binfmt_misc registration under gh actions for these to work.
          # - name: rocky9-aarch64-neuron-aws
          #   args: "--define 'with_neuron 1' --define 'with_platform_aws 1'"
          #   accel_repo: ""
          #   efa_repo: "./aws-efa-installer/RPMS/ROCKYLINUX9/aarch64/"
          #   mock: "/etc/mock/rocky+epel-9-aarch64.cfg"
          # - name: rocky9-aarch64-cuda-aws
          #   args: "--define 'with_neuron 1' --define 'with_platform_aws 1'"
          #   accel_repo: --addrepo "https://developer.download.nvidia.com/compute/cuda/repos/rhel9/aarch64/"
          #   efa_repo: "./aws-efa-installer/RPMS/ROCKYLINUX9/aarch64/"
          #   mock: "/etc/mock/rocky+epel-9-aarch64.cfg"

    name: Build RPM for ${{ matrix.name }}
    steps:
      - run: dnf install -y mock nodejs createrepo_c
      - uses: actions/download-artifact@master
        with:
          name: "libnccl-net-ofi.src.rpm"
          path: .
      - run: curl -O https://efa-installer.amazonaws.com/aws-efa-installer-latest.tar.gz
      - run: tar xf ./aws-efa-installer-latest.tar.gz
      - run: bash -c "cd ${{ matrix.efa_repo }} && createrepo_c ."
      - run: mock --isolation=simple --verbose --addrepo file://$(realpath ${{ matrix.efa_repo }}) ${{ matrix.accel_repo }} -r ${{ matrix.mock }} ${{ matrix.args }} *.src.rpm
      - run: rpm -qpl /var/lib/mock/**/result/*.rpm
      - uses: actions/upload-artifact@v4
        with:
          name: "RPMs - ${{ matrix.name }}"
          path: "/var/lib/mock/**/result/*.rpm"
          if-no-files-found: 'error'
          compression-level: '0'
